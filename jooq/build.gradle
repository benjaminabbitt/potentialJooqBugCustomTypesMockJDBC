buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'postgresql:postgresql:9.1-901-1.jdbc4'
        classpath "com.googlecode.flyway:flyway-gradle-plugin:2.2.1"
    }
}

apply plugin: 'flyway'

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'org.springframework:spring-jdbc:3.2.4.RELEASE'
    compile 'org.jooq:jooq:3.3.1'
    compile 'org.jooq:jooq-meta:3.3.1'
    compile 'org.jooq:jooq-codegen:3.3.1'
    compile 'postgresql:postgresql:9.1-901-1.jdbc4'
    compile 'javax.persistence:persistence-api:1.0'
    compile 'javax.validation:validation-api:1.1.0.Final'
    compile 'com.googlecode.flyway:flyway-core:2.2.1'
    compile 'org.hibernate:hibernate-validator:5.0.1.Final'
    compile project(':flyway')
    compile project(':jooqJodaTime')


    testCompile "junit:junit:4.11"
}

flyway {
    url = "jdbc:postgresql://localhost/potentialJooqBugCustomTypesMockJDBC"
    user =  'potentialJooqBugCustomTypesMockJDBC'
    password = 'potentialJooqBugCustomTypesMockJDBC'
    schemas = ['public']

    cleanOnValidationError true
    validateOnMigrate true

    locations = ["classpath:migrations"]
}


task generateJooq(type: JavaExec) {
	inputs.files file('jooq.xml')
    sourceSets['main'].allJava.srcDirs.each {
        outputs.dir it
    }
	main = 'org.jooq.util.GenerationTool'
	args = ['/jooq.xml']
	classpath = sourceSets.main.compileClasspath + files('.')
}

